<% content_for :jumbo do %>
	<h1 class="page-header"><%= @bankAccount.name %> | 
		<%= I18n.l session[:begin_date].to_date, :format => "%B %Y" %>
	</h1>	
<% end %>

<div class="row">

	<div class="col-md-6">
		<div class="panel-body">
			<div class="flot-chart" style="height:70px;">
				<div class="flot-chart-content" id="flot-bar-chart" style="padding: 0px; position: relative;">
				</div>
			</div>
		</div>
	</div>
	<div class="col-md-6">
		<h3>Solde : <%= number_to_currency(@bankAccount.final_amount, unit: @bankAccount.devise.symbol, format: "%n %u") %></h3>
	</div>

</div>

<hr />

<div class="row">

<!-- month chose -->
<%= render "month_choise" %>
<!-- end month choise -->

<% @operation = Operation.new(bank_account_id: @bankAccount.id, movement_type: "normal") %>

<%= form_for @operation, :url => {:controller => "bank_accounts", :action => "add_operation"} do |o| %>
	<%= o.hidden_field ( :bank_account_id ) %>
	<%= o.hidden_field ( :movement_type ) %>
	<table>
		<table class="table">
			<thead>
				<tr>			
					<td colspan="2">Date</td>
					<td>Libell&eacute;</td>
					<td>Poste</td>
					<td></td>
					<td></td>
					<td colspan="2"></td>
					<td colspan="2"></td>
				</tr>
			</thead>
			<tbody>
			
				<tr>
					<td colspan="2"><%= o.date_field( :date_operation, :value => Date.today.to_s(:db), class: "form-control", required: true ) %></td>
					<td><%= o.text_field( :wording, class: "form-control", required: true ) %></td>
					<td><%= o.collection_select( :operation_classification_id, OperationClassification.where(user_id: session[:current_user_id]), :id, :wording, {}, { class: "form-control"} ) %></td>
					<td><%= o.select( :movement, options_for_select([["Débit", "output"], ["Crédit", "input"]]), {}, { class: "form-control"} ) %>
					<td colspan="2"><%= o.number_field( :amount, :step => 0.01, class: "form-control", placeholder: "Montant", required: true) %></td>				
					<td colspan="2"><%= o.submit "Ajouter", class: "btn btn-success"  %></td>
				</tr>
				<% @bankAccount.operations.where(
					'date_operation >= ?', session[:begin_date]).where(
					'date_operation < ?', session[:end_date]).order(:date_operation).order(:id).reverse_order.each do |o| %>
				<% if(o.movement == "input") %>
					<tr class="success">
				<% else %>
					<tr class="warning">
				<% end %>
					<td>
						<% if(o.movement_type == "transfer") %>
							<i class="fa fa-exchange"></i>
						<% end %>
					</td>
					<td><%= o.date_operation.strftime("%d/%m/%Y") %>
					<td><%= o.wording %></td>
					<td><%= o.operation_classification.wording %></td>
					
					<% if(o.movement == "input") %>
						<td><%= number_to_currency(o.amount, unit: @bankAccount.devise.symbol, format: "%n %u") %></td>
					<% else %>
						<td></td>
					<% end %>				
					<% if(o.movement == "output") %>
						<td><%= number_to_currency(o.amount, unit: @bankAccount.devise.symbol, format: "%n %u") %></td>
					<% else %>
						<td></td>
					<% end %>
					
					<% if(o.operation_valid == "not_ok") %>
					
						<% if(o.movement_type == "transfer") %>
							<td></td>
						<% else %>
							<td>
								<a href="#test_modal" 
									data-toggle="modal" 
									data-id="<%= o.id %>"
									data-date_operation="<%= o.date_operation.strftime("%Y-%m-%d") %>"
									data-operation_classification_id="<%= o.operation_classification_id %>"
									data-wording="<%= o.wording %>"
									data-movement="<%= o.movement %>"
									data-amount="<%= o.amount %>"
									class="open_operation_dialog btn btn-warning btn-xs">
								Modifier</a>
							</td>
						<% end %>
						<td>			
						<%= link_to "Supprimer",{:controller => "bank_accounts", :action => "delete_operation", :id_operation => o.id, :id_bank_account => @bankAccount.id }, 
							data: { confirm: "Supprimer l'opération ?" }, 
							class: "btn btn-danger btn-xs" %>
						</td>
						<td>
							<%= link_to "Clore", { :controller => "operations", :action => "check", :id => o.id, :id_bank_account => @bankAccount.id }, class: "btn btn-default btn-xs" %>
						</td>					
					<% else %>
						<td colspan="3">
							<%= link_to "Declore", { :controller => "operations", :action => "uncheck", :id => o.id, :id_bank_account => @bankAccount.id }, class: "btn btn-default btn-xs" %>
						</td>					
					<% end %>
					
				</tr>
			<% end %>
			</tbody>
		</table>	
	</table>

<% end %>

</div>

<%= render "edit_operation" %>

<script>
$("#datepicker").datepicker({
				viewMode: 'months',
				minViewMode: 'months',
				format: 'mm-yyyy'
		}).on("changeDate", function(e){				
			//console.log(e.date.getMonth() + 1);
			//console.log(e.date.getYear());
			post('/bank_accounts/define_date', {define_date_month: e.date.getMonth() + 1,define_date_year: e.date.getFullYear() , id: '<%= @bankAccount.id %>'});				
    });

function post(path, params, method) {
    method = method || "post"; // Set method to post by default if not specified.
    var form = document.createElement("form");
    form.setAttribute("method", method);
    form.setAttribute("action", path);

    for(var key in params) {
        if(params.hasOwnProperty(key)) {
            var hiddenField = document.createElement("input");
            hiddenField.setAttribute("type", "hidden");
            hiddenField.setAttribute("name", key);
            hiddenField.setAttribute("value", params[key]);
            form.appendChild(hiddenField);
         }
    }

    document.body.appendChild(form);
    form.submit();
}

$(document).ready(function() {			
		loadChart();
	});
	
function loadChart(){	
		$.ajax({
			url: "/stats/input_output_data",
			data: 	{ 	
						month : '<%= session[:begin_date] %>',
						bank_account_id: <%= @bankAccount.id %>
					},
			type: "POST",
			format: "json"
		}).done(
			function(jsonData) {
				var data = [{data: [[jsonData.input,1]], color: "green"},             
						{data: [[jsonData.output,0]], color: "orange"}];				
				
				var ticks = [
						[1, "Revenus " + jsonData.input + " €"],
						[0, "Dépenses " + jsonData.output + " €"]
					];
				
				var options = {	
						series: {
							bars: {
								show: true
							}
						},
						bars: {
							align: "center",
							barWidth: 0.8,
							horizontal: true							
						},		
						yaxis: {		
							ticks: ticks,
							color: "black",
							tickColor: "#ffffff",
							axisLabelFontSizePixels: 12,
							axisLabelFontFamily: 'Verdana, Arial',
							axisLabelPadding: 3
						},
						xaxis: {   
							ticks: 0
						},
						grid: {							
							borderColor: {top: "#ffffff", left: "#ffffff"}
						}
					};					
				
				$.plot($("#flot-bar-chart"), data, options);				
			}
		).fail(
			function() {
				console.log( "error" );
				})
				
		};		
	
</script>





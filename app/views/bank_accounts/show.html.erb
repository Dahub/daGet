<% content_for :jumbo do %>
	<h1 class="page-header">Gestion du compte : <%= @bankAccount.name %></h1>	
<% end %>

<div class="row">

<h3>Solde : <%= number_to_currency(@bankAccount.final_amount, unit: @bankAccount.devise.symbol, format: "%n %u") %></h3>

<!-- month choise -->


<div class="form-group input-group col-sm-2" id="datepicker" 
		data-date="<%= (Date.parse( session[:begin_date].gsub(/, */, '-') )).strftime("%m-%Y") %>" 
        data-date-format="mm-yyyy">
	<input type="text" class="form-control" readonly="readonly" id="define_date" name="define_date" value="<%= (Date.parse( session[:begin_date].gsub(/, */, '-') )).strftime("%m-%Y") %>" >
	<span class="input-group-btn">
		<button class="btn btn-default" type="button"><i class="fa fa-calendar"></i>
		</button>
	</span>
</div>

<!-- end month choise -->

<% @operation = Operation.new(bank_account_id: @bankAccount.id) %>

<%= form_for @operation, :url => {:controller => "bank_accounts", :action => "add_operation"} do |o| %>
	<%= o.hidden_field ( :bank_account_id ) %>

	<table>
		<table class="table">
			<thead>
				<tr>			
					<td>Date</td>
					<td>Libell&eacute;</td>
					<td>Poste</td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
				</tr>
			</thead>
			<tbody>
			
				<tr>
					<td><%= o.date_field( :date_operation, :value => Date.today.to_s(:db), class: "form-control", required: true ) %></td>
					<td><%= o.text_field( :wording, class: "form-control", required: true ) %></td>
					<td><%= o.collection_select( :operation_classification_id, OperationClassification.where(user_id: session[:current_user_id]), :id, :wording, {}, { class: "form-control"} ) %></td>
					<td><%= o.select( :movement, options_for_select([["Débit", "output"], ["Crédit", "input"]]), {}, { class: "form-control"} ) %>
					<td colspan="2"><%= o.number_field( :amount, :step => 0.01, class: "form-control", placeholder: "Montant", required: true) %></td>				
					<td><%= o.submit "Ajouter", class: "btn btn-success"  %></td>
				</tr>
				<% @bankAccount.operations.where(
					'date_operation >= ?', session[:begin_date]).where(
					'date_operation <= ?', session[:end_date]).order(:date_operation).reverse_order.each do |o| %>
				<% if(o.movement == "input") %>
					<tr class="success">
				<% else %>
					<tr class="warning">
				<% end %>
					<td><%= o.date_operation.strftime("%d/%m/%Y") %>
					<td><%= o.wording %></td>	
					<td><%= o.operation_classification.wording %></td>
					<% if(o.movement == "input") %>
						<td><%= number_to_currency(o.amount, unit: @bankAccount.devise.symbol, format: "%n %u") %></td>
					<% else %>
						<td></td>
					<% end %>				
					<% if(o.movement == "output") %>
						<td><%= number_to_currency(o.amount, unit: @bankAccount.devise.symbol, format: "%n %u") %></td>
					<% else %>
						<td></td>
					<% end %>
					<td>
						<a href="#test_modal" 
							data-toggle="modal" 
							data-id="<%= o.id %>"
							data-date_operation="<%= o.date_operation.strftime("%Y-%m-%d") %>"
							data-operation_classification_id="<%= o.operation_classification_id %>"
							data-wording="<%= o.wording %>"
							data-movement="<%= o.movement %>"
							data-amount="<%= o.amount %>"
							class="open_operation_dialog btn btn-warning btn-xs">
						Modifier</a>
					</td>
					<!-- <td><a href="#test_modal" data-toggle="modal" class="btn btn-warning btn-xs">Modifier</a></td> -->
					<td>			
					<%= link_to "Supprimer",{:controller => "bank_accounts", :action => "delete_operation", :id_operation => o.id, :id_bank_account => @bankAccount.id }, 
						data: { confirm: "Supprimer l'opération ?" }, 
						class: "btn btn-danger btn-xs" %></td>
				</tr>
			<% end %>
			</tbody>
		</table>	
	</table>

<% end %>

</div>

<%= render "edit_operation" %>

<script>
$("#datepicker").datepicker({
				viewMode: 'months',
				minViewMode: 'months',
				maxView: 'months',
				format: 'mm-yyyy'
		}).on("changeDate", function(e){				
			post('/bank_accounts/define_date', {define_date: e.timeStamp, id: '<%= @bankAccount.id %>'});				
    });

	function post(path, params, method) {
    method = method || "post"; // Set method to post by default if not specified.

    // The rest of this code assumes you are not using a library.
    // It can be made less wordy if you use one.
    var form = document.createElement("form");
    form.setAttribute("method", method);
    form.setAttribute("action", path);

    for(var key in params) {
        if(params.hasOwnProperty(key)) {
            var hiddenField = document.createElement("input");
            hiddenField.setAttribute("type", "hidden");
            hiddenField.setAttribute("name", key);
            hiddenField.setAttribute("value", params[key]);

            form.appendChild(hiddenField);
         }
    }

    document.body.appendChild(form);
    form.submit();
}
	
</script>




